---

- name: template sysctl elk-monitoring.conf
  template: src=elk-monitoring.conf.j2 dest=/usr/lib/sysctl.d/elk-monitoring.conf
  register: logging_sysconfig

- name: apply sysctl system config
  shell: sysctl --system
  when: logging_sysconfig.changed

- name: create /opt/logging/elk directory
  file:
    path: /opt/logging/elk
    state: directory

- name: upload logstash configs to /opt/logging/elk/
  copy:
    src: "elk/{{ item }}"
    dest: "/opt/logging/elk/{{ item }}"
  with_items:
    - 02-beats-input.conf
    - 03-gelf-input.conf
    - 11-nginx.conf
    - 12-xl_auth.conf
    - 30-output.conf
  register: logstash_configs

- name: (re-)start elk
  docker_container:
    name: elk
    hostname: elk
    image: sebp/elk:611
    state: started
    restart: "{{ logstash_configs.changed }}"
    restart_policy: unless-stopped
    log_driver: syslog
    log_options:
      tag: elk
    volume_driver: local
    volumes:
      - elk:/var/lib/elasticsearch
      - /opt/logging/elk/02-beats-input.conf:/etc/logstash/conf.d/02-beats-input.conf
      - /opt/logging/elk/03-gelf-input.conf:/etc/logstash/conf.d/03-gelf-input.conf
      - /opt/logging/elk/11-nginx.conf:/etc/logstash/conf.d/11-nginx.conf
      - /opt/logging/elk/12-xl_auth.conf:/etc/logstash/conf.d/12-xl_auth.conf
      - /opt/logging/elk/30-output.conf:/etc/logstash/conf.d/30-output.conf
    ports:
      - 5601:5601
      - 9200:9200
      - 5044:5044
      - 12201:12201/udp
  register: elk_docker_started

- name: wait for elasticsearch to be online
  wait_for: host=localhost port=9200 delay=30
  when: elk_docker_started.changed

- name: wait for elasticsearch health status 'green'
  uri:
    url: "http://localhost:9200/_cluster/health"
    return_content: yes
  register: elasticsearch_cluster_health
  until: elasticsearch_cluster_health.json.status == 'green'
  retries: 30

- name: insert filebeat.template.json
  uri:
    url: "http://localhost:9200/_template/filebeat"
    method: PUT
    body: "{{ lookup('file','filebeat.template.json') }}"
    body_format: json
    status_code: 200

- name: insert "catch-all" template
  uri:
    url: "http://localhost:9200/_template/all"
    method: PUT
    body: '{"index_patterns": ["*"], "settings" : {"number_of_shards": 1, "number_of_replicas": 0}}'
    body_format: json
    status_code: 200

...
